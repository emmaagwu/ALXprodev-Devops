#!/bin/bash

# Directory to save data
mkdir -p pokemon_data

# Error log file
ERROR_LOG="errors.txt"
> "$ERROR_LOG"  # Clear previous errors

# List of Pokémon
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Base API URL
API_URL="https://pokeapi.co/api/v2/pokemon"

# Function to fetch Pokémon data with retry logic
fetch_pokemon() {
    local name="$1"
    local file="pokemon_data/${name}.json"
    local attempts=0
    local max_attempts=3
    local success=false

    echo "Fetching data for $name..."

    while [ $attempts -lt $max_attempts ]; do
        # Fetch data and store HTTP status code
        http_code=$(curl -s -w "%{http_code}" -o "$file" "${API_URL}/${name}")
        
        if [ "$http_code" -eq 200 ]; then
            echo "Saved data to $file ✅"
            success=true
            break
        else
            ((attempts++))
            echo "Attempt $attempts failed for $name (HTTP $http_code)... Retrying in 1s..."
            sleep 1
        fi
    done

    if ! $success; then
        echo "[$(date)] Failed to fetch data for $name after $max_attempts attempts. Last status: $http_code" >> "$ERROR_LOG"
        echo "Failed to fetch data for $name ❌ (Logged)"
    fi
}

# Loop through Pokémon and fetch each
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon"
    sleep 1  # Delay to prevent rate-limiting
done
